/* Problem Description

我们看到过很多直线分割平面的题目，今天的这个题目稍微有些变化，我们要求的是n条折线分割平面的最大数目。比如，一条折线可以将平面分成两部分，两条折线最多可以将平面分成7部分，具体如下所示。



Input

输入数据的第一行是一个整数C,表示测试实例的个数，然后是C 行数据，每行包含一个整数n(0<n<=10000),表示折线的数量。

Output

对于每个测试实例，请输出平面的最大分割数，每个实例的输出占一行。

Sample Input

2
1
2

Sample Output

2
7

分析

首先我们知道所有的线都两两不平行。也就是说我可以做一条跟他们都不平行的线来跟他们都相交。
那么在这个图里，就有4条线，于是我们先做第一条射线（红色）。
我们的目标是令其跟已知的所有线都相交。
于是就可以这么做：



这条射线经过了4条线，一共被分为5小段，除了最靠近射线起点的那一段之外剩下的每一段都割开了一个区域。我用蓝色的小星星标记了一下 作一条（红色）射线的话，会产生8个区域



我们继续完成折线，再画一条射线，那么类似的，我同样得到了5个线段，除了最靠近射线起点的那一段之外剩下的每一段都割开了一个区域。
重点！ 靠近射线起点的两条线段组成一个小折线，又可以割出一块。
好了，于是我们就可以知道，做第三条折线一共可以割出4+4+1块。

接着我们把情况推到n条折线。当然前面的假设还是成立的，就是两两不平行的情况。
那么显然的，我可以做一条射线使其跟所有的2n 条线相交，并割出2n个区域；然后再在这条射线的起点上再做一条射线，再割2n个区域，最后射线的起点端的两个小线段围住一块区域，再得到一个区域。
于是我们就可以得到这样一个结论。n条折线分割的区域会比n - 1条折线分割的区域多 4 (n-1) + 1 个

那么我们假设答案是f(n)的话，那么递推式就是：f ( n ) = f ( n - 1 ) + 4 * ( n - 1 ) + 1

*/




#include<iostream>
using namespace std;
const int maxn=10000+5;
long long a[maxn];
void f()
{
    a[1]=2;
    a[2]=7;
    for(int i=3;i<maxn;i++)
    {
        a[i]=a[i-1]+4*(i-1)+1;
    }
}
int main()
{
    int n;
    f();
    int t;
    cin>>t;
    while(t--)
    {
        cin>>n;
        cout<<a[n]<<endl;
    }
    return 0;
}

